{
    "policy":
    {
        "name": "aws_cloudtrail_policy",
        "short_description": "AWS CloudTrail Policy",
        "description": null,
        "settings":
        {
            "tests":
            {
                "output_format": null
            }
        },
        "operating_system_family_id": null,
        "operating_system_id": null,
        "type": null
    },
    "data":
    [
        {
            "Configurations":
            [
                {
                    "Config":
                    [
                        {
                            "id": "ConfigurationsConfig3-1-Ensure-CloudTrail-is-enabled-in-all-regions",
                            "name": "3.1 Ensure CloudTrail is enabled in all regions",
                            "checks":
                            {
                                "Is multi region trail":
                                [
                                    {
                                        "exp": "true",
                                        "check": "equals",
                                        "expected": "true",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).\nThe AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,\n- ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected\n- ensuring that a multi-regions trail exists will ensure that Global Service Logging is enabled for a trail by default to capture recording of events generated on AWS global services\n- for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account",
                                        "remediation": "Perform the following to enable global (Multi-region) CloudTrail logging:\nFrom Console:\n1. Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n2. Click on Trails on the left navigation pane\n3. Click Get Started Now , if presented\n- Click Add new trail\n- Enter a trail name in the Trail name box\n- Set the Apply trail to all regions option to Yes\n- Specify an S3 bucket name in the S3 bucket box\n- Click Create\n4. If 1 or more trails already exist, select the target trail to enable for global logging\n5. Click the edit icon (pencil) next to Apply trail to all regions , Click Yes and\nClick Save.\n6. Click the edit icon (pencil) next to Management Events click All for setting\nRead/Write Events and Click Save.\nFrom Command Line:\n aws cloudtrail create-trail --name 'trail_name' --bucket-name 's3_bucket_for_cloudtrail' --is-multi-region-trail\naws cloudtrail update-trail --name 'trail_name' --is-multi-region-trail"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Configurations",
                                "Config",
                                "*"
                            ],
                            "check_type": "configurations",
                            "Configurations":
                            {
                                "name": "*"
                            },
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "ConfigurationsConfig3-2-Ensure-CloudTrail-log-file-validation-is-enabled",
                            "name": "3.2 Ensure CloudTrail log file validation is enabled",
                            "checks":
                            {
                                "log file validation enabled":
                                [
                                    {
                                        "exp": "true",
                                        "check": "equals",
                                        "expected": "true",
                                        "background": "CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.\nRationale:\nEnabling log file validation will provide additional integrity checking of CloudTrail logs.",
                                        "remediation": "Perform the following to enable log file validation on a given trail:\nFrom Console:\n1. Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n2. Click on Trails on the left navigation pane\n3. Click on target trail\n4. Within the S3 section click on the edit icon (pencil)\n5. Click Advanced\n6. Click on the Yes radio button in section Enable log file validation\n7. Click Save\nFrom Command Line:\naws cloudtrail update-trail --name 'trail_name' --enable-log-file-validation\nNote that periodic validation of logs using these digests can be performed by running the following command:\n aws cloudtrail validate-logs --trail-arn 'trail_arn' --start-time 'start_time --end-time 'end_time'"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Configurations",
                                "Config",
                                "*"
                            ],
                            "check_type": "configurations",
                            "Configurations":
                            {
                                "name": "*"
                            },
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "ConfigurationsConfig3-7-Ensure-CloudTrail-logs-are-encrypted-at-rest-using-KMS-CMKs",
                            "name": "3.7 Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
                            "error": false,
                            "checks":
                            {
                                "KMS key ID":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls for an account and makes those logs available to users and resources in accordance with IAM policies. AWS Key Management Service (KMS) is a managed service that helps create and control the encryption keys used to encrypt account data, and uses Hardware Security Modules (HSMs) to protect the security of encryption keys. CloudTrail logs can be configured to leverage server side encryption (SSE) and KMS customer created master keys (CMK) to further protect CloudTrail logs. It is recommended that CloudTrail be configured to use SSE-KMS.\nConfiguring CloudTrail to use SSE-KMS provides additional confidentiality controls on log data as a given user must have S3 read permission on the corresponding log bucket and must be granted decrypt permission by the CMK policy.",
                                        "remediation": "Perform the following to configure CloudTrail to use SSE-KMS:\nFrom Console:\n1. Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail\n2. In the left navigation pane, choose Trails .\n3. Click on a Trail\n4. Under the S3 section click on the edit button (pencil icon)\n5. Click Advanced\n6. Select an existing CMK from the KMS key Id drop-down menu\n Note: Ensure the CMK is located in the same region as the S3 bucket\n Note: You will need to apply a KMS Key policy on the selected CMK in order for\nCloudTrail as a service to encrypt and decrypt log files using the CMK provided. Steps are provided here for editing the selected CMK Key policy\n7. Click Save\n8. You will see a notification message stating that you need to have decrypt\npermissions on the specified KMS key to decrypt log files.\n9. Click Yes\nFrom Command Line:\naws cloudtrail update-trail --name 'trail_name' --kms-id 'cloudtrail_kms_key' \\\naws kms put-key-policy --key-id 'cloudtrail_kms_key' --policy 'cloudtrail_kms_key_policy'"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Configurations",
                                "Config",
                                "*"
                            ],
                            "check_type": "other",
                            "path_error": "",
                            "description": "3.7 Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "ConfigurationsConfig3-4-Ensure-CloudTrail-trails-are-integrated-with-CloudWatch-Logs",
                            "name": "3.4 Ensure CloudTrail trails are integrated with CloudWatch Logs",
                            "error": false,
                            "checks":
                            {
                                "cloud watch logs log group ARN":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls made in a given AWS account. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail uses Amazon S3 for log file storage and delivery, so log files are stored durably. In addition to capturing CloudTrail logs within a specified S3 bucket for long term analysis, realtime analysis can be performed by configuring CloudTrail to send logs to CloudWatch Logs. For a trail that is enabled in all regions in an account, CloudTrail sends log files from all those regions to a CloudWatch Logs log group. It is recommended that CloudTrail logs be sent to CloudWatch Logs.\nNote: The intent of this recommendation is to ensure AWS account activity is being captured, monitored, and appropriately alarmed on. CloudWatch Logs is a native way to accomplish this using AWS services but does not preclude the use of an alternate solution.\nSending CloudTrail logs to CloudWatch Logs will facilitate real-time and historic activity logging based on user, API, resource, and IP address, and provides opportunity to establish alarms and notifications for anomalous or sensitivity account activity.",
                                        "remediation": "Perform the following to establish the prescribed state:\nFrom Console:\n1. Login to the CloudTrail console at https://console.aws.amazon.com/cloudtrail/\n2. Select the Trail the needs to be updated.\n3. Scroll down to CloudWatch Logs\n4. Click Edit\n5. Under CloudWatch Logs click the box Enabled\n6. Under Log Group pick new or select an existing log group\n7. Edit the Log group name to match the CloudTrail or pick the existing CloudWatch\nGroup.\n8. Under IAM Role pick new or select an existing.\n9. Edit the Role name to match the CloudTrail or pick the existing IAM Role.\n10. Click `Save changes.\nFrom Command Line:\naws cloudtrail update-trail --name 'trail_name' --cloudwatch-logs-log-group- arn 'cloudtrail_log_group_arn' --cloudwatch-logs-role-arn 'cloudtrail_cloudwatchLogs_role_arn'"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Configurations",
                                "Config",
                                "*"
                            ],
                            "check_type": "other",
                            "path_error": "",
                            "description": "3.4 Ensure CloudTrail trails are integrated with CloudWatch Logs",
                            "nodeGroupsOpen": true
                        }
                    ]
                }
            ]
        },
        {
            "Statuses":
            [
                {
                    "Status":
                    [
                        {
                            "id": "StatusesStatus3-1-Ensure-CloudTrail-is-enabled-in-all-regions",
                            "name": "3.1 Ensure CloudTrail is enabled in all regions",
                            "checks":
                            {
                                "is logging":
                                [
                                    {
                                        "exp": "true",
                                        "check": "equals",
                                        "expected": "true",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).\nThe AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,\n- ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected\n- ensuring that a multi-regions trail exists will ensure that Global Service Logging is enabled for a trail by default to capture recording of events generated on AWS global services\n- for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account",
                                        "remediation": "Perform the following to enable global (Multi-region) CloudTrail logging:\nFrom Console:\n1. Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n2. Click on Trails on the left navigation pane\n3. Click Get Started Now , if presented\n- Click Add new trail\n- Enter a trail name in the Trail name box\n- Set the Apply trail to all regions option to Yes\n- Specify an S3 bucket name in the S3 bucket box\n- Click Create\n4. If 1 or more trails already exist, select the target trail to enable for global logging\n5. Click the edit icon (pencil) next to Apply trail to all regions , Click Yes and\nClick Save.\n6. Click the edit icon (pencil) next to Management Events click All for setting\nRead/Write Events and Click Save.\nFrom Command Line:\n aws cloudtrail create-trail --name 'trail_name' --bucket-name 's3_bucket_for_cloudtrail' --is-multi-region-trail\naws cloudtrail update-trail --name 'trail_name' --is-multi-region-trail"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Statuses",
                                "Status",
                                "*"
                            ],
                            "Statuses":
                            {
                                "name": "*"
                            },
                            "check_type": "statuses",
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "StatusesStatus3-4-Ensure-CloudTrail-trails-are-integrated-with-CloudWatch-Logs",
                            "name": "3.4 Ensure CloudTrail trails are integrated with CloudWatch Logs",
                            "checks":
                            {
                                "present":
                                [
                                    {
                                        "check": "equals",
                                        "expected": "true"
                                    }
                                ],
                                "latest cloudwatch logs delivery time":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls made in a given AWS account. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail uses Amazon S3 for log file storage and delivery, so log files are stored durably. In addition to capturing CloudTrail logs within a specified S3 bucket for long term analysis, realtime analysis can be performed by configuring CloudTrail to send logs to CloudWatch Logs. For a trail that is enabled in all regions in an account, CloudTrail sends log files from all those regions to a CloudWatch Logs log group. It is recommended that CloudTrail logs be sent to CloudWatch Logs.\nNote: The intent of this recommendation is to ensure AWS account activity is being captured, monitored, and appropriately alarmed on. CloudWatch Logs is a native way to accomplish this using AWS services but does not preclude the use of an alternate solution.\nSending CloudTrail logs to CloudWatch Logs will facilitate real-time and historic activity logging based on user, API, resource, and IP address, and provides opportunity to establish alarms and notifications for anomalous or sensitivity account activity.",
                                        "remediation": "Perform the following to establish the prescribed state:\nFrom Console:\n1. Login to the CloudTrail console at https://console.aws.amazon.com/cloudtrail/\n2. Select the Trail the needs to be updated.\n3. Scroll down to CloudWatch Logs\n4. Click Edit\n5. Under CloudWatch Logs click the box Enabled\n6. Under Log Group pick new or select an existing log group\n7. Edit the Log group name to match the CloudTrail or pick the existing CloudWatch\nGroup.\n8. Under IAM Role pick new or select an existing.\n9. Edit the Role name to match the CloudTrail or pick the existing IAM Role.\n10. Click `Save changes.\nFrom Command Line:\naws cloudtrail update-trail --name 'trail_name' --cloudwatch-logs-log-group- arn 'cloudtrail_log_group_arn' --cloudwatch-logs-role-arn 'cloudtrail_cloudwatchLogs_role_arn'"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Statuses",
                                "Status",
                                "*"
                            ],
                            "Statuses":
                            {
                                "name": "*"
                            },
                            "check_type": "statuses",
                            "nodeGroupsOpen": true
                        }
                    ]
                }
            ]
        },
        {
            "Policies":
            [
                {
                    "Policies":
                    [
                        {
                            "id": "PoliciesPolicies3-3-Ensure-the-S3-bucket-used-to-store-CloudTrail-logs-is-not-publicly-accessible",
                            "name": "3.3 Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible",
                            "checks":
                            {
                                "Effect":
                                [
                                    {
                                        "exp": "Allow",
                                        "check": "regex_excludes",
                                        "expected": "Allow",
                                        "background": "CloudTrail logs a record of every API call made in your AWS account. These logs file are stored in an S3 bucket. It is recommended that the bucket policy or access control list (ACL) applied to the S3 bucket that CloudTrail logs to prevent public access to the CloudTrail logs.\nAllowing public access to CloudTrail log content may aid an adversary in identifying weaknesses in the affected account's use or configuration.",
                                        "remediation": "Remediation:\nPerform the following to remove any public access that has been granted to the bucket via an ACL or S3 bucket policy:\n1. Go to Amazon S3 console at https://console.aws.amazon.com/s3/home\n2. Right-click on the bucket and click Properties\n3. In the Properties pane, click the Permissions tab.\n4. The tab shows a list of grants, one row per grant, in the bucket ACL. Each row\nidentifies the grantee and the permissions granted.\n5. Select the row that grants permission to Everyone or Any Authenticated User\n6. Uncheck all the permissions granted to Everyone or Any Authenticated User (click\nx to delete the row).\n7. Click Save to save the ACL.\n8. If the Edit bucket policy button is present, click it.\n9. Remove any Statement having an Effect set to Allow and a Principal set to \"*\" or\n{\"AWS\" : \"*\"}.\nDefault Value:\nBy default, S3 buckets are not publicly accessible"
                                    }
                                ],
                                "Principal":
                                [
                                    {
                                        "check": "regex_excludes",
                                        "expected": "excludes {\"AllUsers\":\"*\"}, {\"AuthenticatedUsers\":\"*\"},"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Policies",
                                "Policies",
                                "*"
                            ],
                            "Policies":
                            {
                                "name": "*"
                            },
                            "check_type": "policies",
                            "nodeGroupsOpen": true
                        }
                    ]
                }
            ]
        },
        {
            "Events":
            [
                {
                    "Event":
                    [
                        {
                            "id": "EventsEvent3-10-Ensure-that-Object-level-logging-for-write-events-is-enabled-for-S3-bucket-Automated-",
                            "name": "3.10 Ensure that Object-level logging for write events is enabled for S3 bucket (Automated)",
                            "error": false,
                            "checks":
                            {
                                "Data Resources":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "S3 object-level API operations such as GetObject, DeleteObject, and PutObject are called data events. By default, CloudTrail trails don't log data events and so it is recommended to enable Object-level logging for S3 buckets.\nEnabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account or take immediate actions on any object-level API activity within your S3 Buckets using Amazon CloudWatch Events.",
                                        "remediation": "Remediation: From Console:\n1. Login to the AWS Management Console and navigate to S3 dashboard at\nhttps://console.aws.amazon.com/s3/\n2. In the left navigation panel, click buckets and then click on the S3 Bucket Name that\nyou want to examine.\n3. Click Properties tab to see in detail bucket configuration.\n4. Click on the Object-level logging setting, enter the CloudTrail name for the\nrecording activity. You can choose an existing Cloudtrail or create a new one by navigating to the Cloudtrail console link\nhttps://console.aws.amazon.com/cloudtrail/\n5. Once the Cloudtrail is selected, check the Write event checkbox, so that object-\nlevel logging for Write events is enabled.\n6. Repeat steps 2 to 5 to enable object-level logging of write events for other S3\nbuckets.\nFrom Command Line:\n1. To enable object-level data events logging for S3 buckets within your AWS account, run put-event-selectors command using the name of the trail that you want to reconfigure as identifier: \n2. The command output will be object-level event trail configuration.\n3. If you want to enable it for all buckets at once then change Values parameter to\n[\"arn:aws:s3\"] in command given above.\naws cloudtrail put-event-selectors --region <region-name> --trail-name <trail-name> --event-selectors '[{ \"ReadWriteType\": \"WriteOnly\", \"IncludeManagementEvents\":true, \"DataResources\":
                                        [{ \"Type\": \"AWS::S3::Object\", \"Values\": [\"arn:aws:s3:::'s3-bucket-name'/\"] }] }]'\n2. The command output will be object-level event trail configuration.\n3. If you want to enable it for all buckets at once then change Values parameter to\n[\"arn:aws:s3\"] in command given above.\n4. Repeat step 1 for each s3 bucket to update object-level logging of write events.\n5. Change the AWS region by updating the --region command parameter and perform\nthe process for other regions."
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Events",
                                "Event",
                                "*"
                            ],
                            "check_type": "other",
                            "path_error": "",
                            "description": "3.10 Ensure that Object-level logging for write events is enabled for S3 bucket (Automated)",
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "EventsEvent3-11-Ensure-that-Object-level-logging-for-read-events-is-enabled-for-S3-bucket",
                            "name": "3.11 Ensure that Object-level logging for read events is enabled for S3 bucket",
                            "error": false,
                            "checks":
                            {
                                "Data Resources":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "S3 object-level API operations such as GetObject, DeleteObject, and PutObject are called data events. By default, CloudTrail trails don't log data events and so it is recommended to enable Object-level logging for S3 buckets.\nEnabling object-level logging will help you meet data compliance requirements within your organization, perform comprehensive security analysis, monitor specific patterns of user behavior in your AWS account or take immediate actions on any object-level API activity using Amazon CloudWatch Events.",
                                        "remediation": "From Console:\n1. Login to the AWS Management Console and navigate to S3 dashboard at\nhttps://console.aws.amazon.com/s3/\n2. In the left navigation panel, click buckets and then click on the S3 Bucket Name that\nyou want to examine.\n3. Click Properties tab to see in detail bucket configuration.\n4. Click on the Object-level logging setting, enter the CloudTrail name for the\nrecording activity. You can choose an existing Cloudtrail or create a new one by navigating to the Cloudtrail console link\nhttps://console.aws.amazon.com/cloudtrail/\n5. Once the Cloudtrail is selected, check the Read event checkbox, so that object-\nlevel logging for Read events is enabled.\n6. Repeat steps 2 to 5 to enable object-level logging of read events for other S3\nbuckets.\n\nFrom Command Line:\n1. To enable object-level data events logging for S3 buckets within your AWS account, run put-event-selectors command using the name of the trail that you want to reconfigure as identifier:\n\naws cloudtrail put-event-selectors --region <region-name> --trail-name <trail-name> --event-selectors '[{ \"ReadWriteType\": \"ReadOnly\", \"IncludeManagementEvents\":true, \"DataResources\":
                                        [{ \"Type\": \"AWS::S3::Object\", \"Values\": [\"arn:aws:s3:::'s3-bucket-name'/\"] }] }]'\n\n2. The command output will be object-level event trail configuration.\n3. If you want to enable it for all buckets at ones then change Values parameter to\n[\"arn:aws:s3\"] in command given above.\n4. Repeat step 1 for each s3 bucket to update object-level logging of read events.\n5. Change the AWS region by updating the --region command parameter and perform\nthe process for other regions."
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Events",
                                "Event",
                                "*"
                            ],
                            "check_type": "other",
                            "path_error": "",
                            "description": "3.11 Ensure that Object-level logging for read events is enabled for S3 bucket",
                            "nodeGroupsOpen": true
                        },
                        {
                            "id": "EventsEvent3-1-Ensure-CloudTrail-is-enabled-in-all-regions",
                            "name": "3.1 Ensure CloudTrail is enabled in all regions",
                            "error": false,
                            "checks":
                            {
                                "Read Write Type":
                                [
                                    {
                                        "check": "equals",
                                        "expected": "All"
                                    }
                                ],
                                "Include Management Events":
                                [
                                    {
                                        "exp": "true",
                                        "check": "equals",
                                        "expected": "true",
                                        "background": "AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).\nThe AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally,\n- ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected\n- ensuring that a multi-regions trail exists will ensure that Global Service Logging is enabled for a trail by default to capture recording of events generated on AWS global services\n- for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account",
                                        "remediation": "Perform the following to enable global (Multi-region) CloudTrail logging:\nFrom Console:\n1. Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n2. Click on Trails on the left navigation pane\n3. Click Get Started Now , if presented\n- Click Add new trail\n- Enter a trail name in the Trail name box\n- Set the Apply trail to all regions option to Yes\n- Specify an S3 bucket name in the S3 bucket box\n- Click Create\n4. If 1 or more trails already exist, select the target trail to enable for global logging\n5. Click the edit icon (pencil) next to Apply trail to all regions , Click Yes and\nClick Save.\n6. Click the edit icon (pencil) next to Management Events click All for setting\nRead/Write Events and Click Save.\nFrom Command Line:\n aws cloudtrail create-trail --name 'trail_name' --bucket-name 's3_bucket_for_cloudtrail' --is-multi-region-trail\naws cloudtrail update-trail --name 'trail_name' --is-multi-region-trail"
                                    }
                                ]
                            },
                            "ci_path":
                            [
                                "Events",
                                "Event",
                                "*"
                            ],
                            "check_type": "other",
                            "path_error": "",
                            "description": "3.1 Ensure CloudTrail is enabled in all regions",
                            "nodeGroupsOpen": true
                        }
                    ]
                }
            ]
        },
        {
            "Logging":
            [
                {
                    "Logging Bucket":
                    [
                        {
                            "id": "LoggingLogging-Bucket3-6-Ensure-S3-bucket-access-logging-is-enabled-on-the-CloudTrail-S3-bucket",
                            "name": "3.6 Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket",
                            "checks":
                            {
                                "target bucket":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": ".",
                                        "background": "S3 Bucket Access Logging generates a log that contains access records for each request made to your S3 bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed. It is recommended that bucket access logging be enabled on the CloudTrail S3 bucket.\nBy enabling S3 bucket logging on target S3 buckets, it is possible to capture all events which may affect objects within any target buckets. Configuring logs to be placed in a separate bucket allows access to log information which can be useful in security and incident response workflows.",
                                        "remediation": "Perform the following to enable S3 bucket logging:\nFrom Console:\n1. Sign in to the AWS Management Console and open the S3 console at https://console.aws.amazon.com/s3.\n2. Under All Buckets click on the target S3 bucket\n3. Click on Properties in the top right of the console\n4. Under Bucket: <s3_bucket_for_cloudtrail> click on Logging\n5. Configure bucket logging\n- Click on Enabled checkbox\n- Select Target Bucket from list o Enter a Target Prefix\n6. Click Save Default Value:\nLogging is disabled."
                                    }
                                ],
                                "target prefix":
                                [
                                    {
                                        "exp": ".",
                                        "check": "regex",
                                        "expected": "."
                                    }
                                ]
                            },
                            "Logging":
                            {
                                "name": "upguardcloudtrail"
                            },
                            "ci_path":
                            [
                                "Logging",
                                "Logging Bucket",
                                "upguardcloudtrail"
                            ],
                            "check_type": "logging",
                            "selectList":
                            [
                                "*"
                            ],
                            "description": "3.6 Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket",
                            "nodeGroupsOpen": true
                        }
                    ]
                }
            ]
        }
    ],
    "scan_options":
    {}
}