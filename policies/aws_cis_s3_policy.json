{
  "policy": {
    "name": "aws_s3_policy",
    "short_description": "AWS S3 Policy",
    "description": "",
    "settings": {
      "tests": {
        "output_format": null
      }
    },
    "operating_system_family_id": null,
    "operating_system_id": null,
    "type": null
  },
  "data": [
    {
      "Encryption": [
        {
          "id": "Encryption2-1-1-Ensure-all-S3-buckets-employ-encryption-at-rest",
          "name": "2.1.1 Ensure all S3 buckets employ encryption-at-rest",
          "checks": {
            "encryption enabled": [
              {
                "check": "equals",
                "expected": "true"
              }
            ],
            "Server Side Encryption Rule*": [
              {
                "check": "regex",
                "expected": "AES256|aws:kms",
                "background": "Amazon S3 provides a variety of no, or low, cost encryption options to protect data at rest.\nEncrypting data at rest reduces the likelihood that it is unintentionally exposed and can nullify the impact of disclosure if the encryption remains unbroken.",
                "remediation": "From Console:\n1. Login to AWS Management Console and open the Amazon S3 console using https://console.aws.amazon.com/s3/\n2. Select the Check box next to the Bucket.\n3. Click on 'Properties'.\n4. Click on Default Encryption.\n5. Select either AES-256 or AWS-KMS\n6. Click Save\n7. Repeat for all the buckets in your AWS account lacking encryption."
              }
            ]
          },
          "ci_path": [
            "Bucket Encryption",
            "Bucket Encryption",
            "Encryption"
          ],
          "Encryption": {
            "name": "Encryption"
          },
          "check_type": "encryption",
          "selectList": [
            "{\"encryption enabled\":\"false\"}",
            "{\"encryption enabled\":\"false\"}",
            "{\"encryption enabled\":\"false\"}",
            "{\"encryption enabled\":\"false\"}",
            "*"
          ],
          "nodeGroupsOpen": true
        }
      ]
    },
    {
      "Public Access Block": [
        {
          "Public Access Block": [
            {
              "id": "Public-Access-BlockPublic-Access-Block2-1-5-Ensure-that-S3-Buckets-are-configured-with-Block-public-access-bucket-settings-",
              "name": "2.1.5 Ensure that S3 Buckets are configured with 'Block public access (bucket settings)'",
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "block public acls": [
                  {
                    "check": "equals",
                    "expected": true,
                    "background": "Amazon S3 provides Block public access (bucket settings) and Block public access (account settings) to help you manage public access to Amazon S3 resources. By default, S3 buckets and objects are created with public access disabled. However, an IAM principal with sufficient S3 permissions can enable public access at the bucket and/or object level. While enabled, Block public access (bucket settings) prevents an individual bucket, and its contained objects, from becoming publicly accessible. Similarly, Block public access (account settings) prevents all buckets, and contained objects, from becoming publicly accessible across the entire account.\nAmazon S3 Block public access (bucket settings) prevents the accidental or malicious public exposure of data contained within the respective bucket(s).\nAmazon S3 Block public access (account settings) prevents the accidental or malicious public exposure of data contained within all buckets of the respective AWS account.\nWhether blocking public access to all or some buckets is an organizational decision that should be based on data sensitivity, least privilege, and use case.",
                    "remediation": "If utilizing Block Public Access (bucket settings) From Console:\n1. Login to AWS Management Console and open the Amazon S3 console using https://console.aws.amazon.com/s3/\n2. Select the Check box next to the Bucket.\n3. Click on 'Edit public access settings'.\n4. Click 'Block all public access'\n5. Repeat for all the buckets in your AWS account that contain sensitive data.\nFrom Command Line:\n1. List all of the S3 Buckets\naws s3 ls\n2. Set the Block Public Access to true on that bucket\naws s3api put-public-access-block --bucket 'name-of-bucket' --public-access- block-configuration \"BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPu blicBuckets=true\"\n\nIf utilizing Block Public Access (account settings)\nFrom Console:\nIf the output reads true for the separate configuration settings then it is set on the account.\n1. Login to AWS Management Console and open the Amazon S3 console using https://console.aws.amazon.com/s3/\n2. Choose Block Public Access (account settings)\n3. Choose Edit to change the block public access settings for all the buckets in your\nAWS account\n4. Choose the settings you want to change, and then choose Save. For details about\neach setting, pause on the i icons.\n5. When you're asked for confirmation, enter confirm. Then Click Confirm to save your\nchanges.\nFrom Command Line:\nTo set Block Public access settings for this account, run the following command:\naws s3control put-public-access-block --public-access-block-configuration BlockPublicAcls=true, IgnorePublicAcls=true, BlockPublicPolicy=true, RestrictPublicBuckets=true --account-id 'value'"
                  }
                ],
                "ignore public acls": [
                  {
                    "check": "equals",
                    "expected": true
                  }
                ],
                "block public policy": [
                  {
                    "check": "equals",
                    "expected": true
                  }
                ],
                "restrict public buckets": [
                  {
                    "check": "equals",
                    "expected": true
                  }
                ]
              },
              "ci_path": [
                "Public Access Block",
                "Public Access Block",
                "block public access - bucket settings"
              ],
              "check_type": "public access block",
              "selectList": [
                "*"
              ],
              "nodeGroupsOpen": true,
              "Public Access Block": {
                "name": "block public access - bucket settings"
              }
            }
          ]
        }
      ]
    },
    {
      "Logging": [
        {
          "id": "Logging3-6-Ensure-S3-bucket-access-logging-is-enabled-on-the-CloudTrail-S3-bucket",
          "name": "3.6 Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket",
          "checks": {
            "logging enabled": [
              {
                "exp": "false",
                "check": "excludes",
                "expected": "false",
                "background": "S3 Bucket Access Logging generates a log that contains access records for each request made to your S3 bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed. It is recommended that bucket access logging be enabled on the CloudTrail S3 bucket.\nBy enabling S3 bucket logging on target S3 buckets, it is possible to capture all events which may affect objects within any target buckets. Configuring logs to be placed in a separate bucket allows access to log information which can be useful in security and incident response workflows.",
                "remediation": "Perform the following to enable S3 bucket logging:\nFrom Console:\n1. Sign in to the AWS Management Console and open the S3 console at https://console.aws.amazon.com/s3.\n2. Under All Buckets click on the target S3 bucket\n3. Click on Properties in the top right of the console\n4. Under Bucket: <s3_bucket_for_cloudtrail> click on Logging\n5. Configure bucket logging\n- Click on Enabled checkbox\n- Select Target Bucket from list o Enter a Target Prefix\n6. Click Save Default Value:\nLogging is disabled."
              }
            ]
          },
          "Logging": {
            "name": "Logging"
          },
          "ci_path": [
            "Bucket Logging",
            "Bucket Logging",
            "Logging"
          ],
          "check_type": "logging",
          "selectList": [
            "{\"logging enabled\":\"false\"}",
            "{\"logging enabled\":\"false\"}",
            "{\"logging enabled\":\"false\"}",
            "{\"logging enabled\":\"false\"}",
            "*"
          ],
          "nodeGroupsOpen": true
        }
      ]
    },
    {
      "Bucket Versioning": [
        {
          "Bucket Versioning": [
            {
              "id": "Bucket-VersioningBucket-Versioning2-1-3-Ensure-MFA-Delete-is-enable-on-S3-buckets",
              "name": "2.1.3 Ensure MFA Delete is enable on S3 buckets",
              "checks": {
                "status": [
                  {
                    "check": "equals",
                    "expected": "enabled"
                  }
                ],
                "MFA delete": [
                  {
                    "exp": "enabled",
                    "check": "equals",
                    "expected": "enabled",
                    "background": "Once MFA Delete is enabled on your sensitive and classified S3 bucket it requires the user to have two forms of authentication.\\nAdding MFA delete to an S3 bucket, requires additional authentication when you change the version state of your bucket or you delete and object version adding another layer of security in the event your security credentials are compromised or unauthorized access is granted.",
                    "remediation": "Perform the steps below to enable MFA delete on an S3 bucket.\\nNote:\\n-You cannot enable MFA Delete using the AWS Management Console. You must use the AWS CLI or API.\\n-You must use your 'root' account to enable MFA Delete on S3 buckets.\\nFrom Command line:\\n1. Run the s3api put-bucket-versioning command\\naws s3api put-bucket-versioning --profile my-root-profile --bucket\\nBucket_Name --versioning-configuration Status=Enabled,MFADelete=Enabled --mfa “arn:aws:iam::aws_account_id:mfa/root-account-mfa-device passcode”"
                  }
                ]
              },
              "ci_path": [
                "Bucket Versioning",
                "Bucket Versioning",
                "versioning"
              ],
              "Versioning": {
                "name": "versioning"
              },
              "check_type": "versioning",
              "selectList": [
                "{\"MFA delete\":\"\",\"status\":\"\"}",
                "{\"MFA delete\":\"\",\"status\":\"\"}",
                "{\"MFA delete\":\"\",\"status\":\"\"}",
                "{\"MFA delete\":\"\",\"status\":\"\"}",
                "*"
              ],
              "description": "2.1.3 Ensure MFA Delete is enable on S3 buckets",
              "nodeGroupsOpen": true
            }
          ]
        }
      ]
    }
  ],
  "scan_options": {}
}
