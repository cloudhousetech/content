{
  "policy": {
    "name": "azure_sql_policy",
    "short_description": "Azure SQL Policy",
    "description": null,
    "settings": {
      "tests": {
        "output_format": null
      }
    },
    "operating_system_family_id": null,
    "operating_system_id": null,
    "type": null
  },
  "data": [
    {
      "SQL Auditing Policy": [
        {
          "SQL Auditing Policy": [
            {
              "id": "SQL-Auditing-PolicySQL-Auditing-Policy4-1-1-Ensure-that-Auditing-is-set-to-On-",
              "name": "4.1.1 Ensure that 'Auditing' is set to 'On'",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "Auditing State": [
                  {
                    "exp": "Enabled",
                    "check": "equals",
                    "expected": "Enabled",
                    "background": "The Azure platform allows a SQL server to be created as a service. Enabling auditing at the server level ensures that all existing and newly created databases on the SQL server instance are audited. Auditing policy applied on the SQL database does not override auditing policy and settings applied on the particular SQL server where the database is hosted.\nAuditing tracks database events and writes them to an audit log in the Azure storage account. It also helps to maintain regulatory compliance, understand database activity, and gain insight into discrepancies and anomalies that could indicate business concerns or suspected security violations.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. For each server instance\n3. Click on Auditing\n4. Set Enable Azure SQL Auditing is set to On"
                  }
                ]
              },
              "ci_path": [
                "SQL Auditing Policy",
                "SQL Auditing Policy",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "description": "4.1.1 Ensure that 'Auditing' is set to 'On'",
              "nodeGroupsOpen": true
            },
            {
              "id": "SQL-Auditing-PolicySQL-Auditing-Policy4-1-3-Ensure-that-Auditing-Retention-is-greater-than-90-days-",
              "name": "4.1.3 Ensure that 'Auditing' Retention is 'greater than 90 days'",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "retention days": [
                  {
                    "cond": [
                      {
                        "op": ">=",
                        "val": "90"
                      }
                    ],
                    "check": "conditional",
                    "background": "Audit Logs can be used to check for anomalies and give insight into suspected breaches or misuse of information and access.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. For each server instance\n3. Click on Auditing\n4. If storage is selected, expand Advanced properties\n5. Set the Retention (days) setting greater than 90 days or 0 for unlimited retention.\n6. Select Save"
                  }
                ]
              },
              "ci_path": [
                "SQL Auditing Policy",
                "SQL Auditing Policy",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "description": "4.1.3 Ensure that 'Auditing' Retention is 'greater than 90 days'",
              "nodeGroupsOpen": true
            },
            {
              "id": "SQL-Auditing-PolicySQL-Auditing-Policy4-2-2-Ensure-that-Vulnerability-Assessment-VA-is-enabled-on-a-SQL-server-by-setting-a-Storage-Account",
              "name": "4.2.2 Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "storage account name": [
                  {
                    "exp": ".",
                    "check": "regex",
                    "expected": ".",
                    "background": "Enabling Azure Defender for SQL server does not enables Vulnerability Assessment capability for individual SQL databases unless storage account is set to store the scanning data and reports.\nThe Vulnerability Assessment service scans databases for known security vulnerabilities and highlight deviations from best practices, such as misconfigurations, excessive permissions, and unprotected sensitive data. Results of the scan include actionable steps to resolve each issue and provide customized remediation scripts where applicable. Additionally an assessment report can be customized by setting an acceptable baseline for permission configurations, feature configurations, and database settings.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. Select a server instance\n3. Click on Security Center\n4. Select Configure next to Enabled at subscription-level\n5. In Section Vulnerability Assessment Settings, Click Select Storage account\n6. Choose Storage Account (Existing or Create New). Click Ok\n7. Click Save"
                  }
                ]
              },
              "ci_path": [
                "SQL Auditing Policy",
                "SQL Auditing Policy",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "description": "4.2.2 Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account",
              "nodeGroupsOpen": true
            }
          ]
        }
      ]
    },
    {
      "Database Encryption": [
        {
          "id": "Database-Encryption4-1-2-Ensure-that-Data-encryption-is-set-to-On-on-a-SQL-Database",
          "name": "4.1.2 Ensure that 'Data encryption' is set to 'On' on a SQL Database",
          "error": false,
          "checks": {
            "present": [
              {
                "exp": "true",
                "check": "equals",
                "expected": "true",
                "background": "Azure SQL Database transparent data encryption helps protect against the threat of malicious activity by performing real-time encryption and decryption of the database, associated backups, and transaction log files at rest without requiring changes to the application.",
                "remediation": "From Azure Console\n1. Go to SQL databases\n2. For each DB instance\n3. Click on Transparent data encryption\n4. Set Data encryption to On"
              }
            ],
            "transparent data encryption status": [
              {
                "check": "equals",
                "expected": "Enabled"
              }
            ]
          },
          "ci_path": [
            "Database Encryption",
            "*",
            "**"
          ],
          "check_type": "other",
          "path_error": "",
          "selectList": [
            "*"
          ],
          "description": "4.1.2 Ensure that 'Data encryption' is set to 'On' on a SQL Database",
          "nodeGroupsOpen": true
        }
      ]
    },
    {
      "Vulnerability Assessment": [
        {
          "Vulnerability Assessment": [
            {
              "id": "Vulnerability-AssessmentVulnerability-Assessment4-2-3-Ensure-that-VA-setting-Periodic-recurring-scans-to-on-for-each-SQL-server",
              "name": "4.2.3 Ensure that VA setting 'Periodic recurring scans' to 'on' for each SQL server",
              "error": false,
              "checks": {
                "present": [
                  {
                    "exp": "true",
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "recurring scans enabled": [
                  {
                    "exp": "true",
                    "check": "equals",
                    "expected": "true",
                    "background": "VA setting 'Periodic recurring scans' schedules periodic (weekly) vulnerability scanning for the SQL server and corresponding Databases. Periodic and regular vulnerability scanning provides risk visibility based on updated known vulnerability signatures and best practices.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. For each server instance\n3. Click on Security Center\n4. In Section Vulnerability Assessment Settings, set Storage Account if not\nalready\n5. Toggle 'Periodic recurring scans' to ON.\n6. Click Save"
                  }
                ]
              },
              "ci_path": [
                "Vulnerability Assessment",
                "Vulnerability Assessment",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "description": "4.2.3 Ensure that VA setting 'Periodic recurring scans' to 'on' for each SQL server",
              "nodeGroupsOpen": true
            },
            {
              "id": "Vulnerability-AssessmentVulnerability-Assessment4-2-4-Ensure-that-VA-setting-Send-scan-reports-to-is-configured-for-a-SQL-server",
              "name": "4.2.4 Ensure that VA setting 'Send scan reports to' is configured for a SQL server",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "recurring scan email addresses": [
                  {
                    "exp": ".",
                    "check": "regex",
                    "expected": ".",
                    "background": "Vulnerability Assessment (VA) scan reports and alerts will be sent to email ids configured at 'Send scan reports to'. This may help in reducing time required for identifying risks and taking corrective measures.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. Select a server instance\n3. Click on Security Center\n4. Ensure that Azure Defender for SQL is set to Enabled\n5. Select Configure next to Enabled at subscription-level\n6. In Section Vulnerability Assessment Settings, configure Storage Accounts if\nnot already\n7. Configure email ids for concerned data owners/stakeholders at 'Send scan reports\nto'\n8. Click Save"
                  }
                ]
              },
              "ci_path": [
                "Vulnerability Assessment",
                "Vulnerability Assessment",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "selectList": [
                "*"
              ],
              "description": "4.2.4 Ensure that VA setting 'Send scan reports to' is configured for a SQL server",
              "nodeGroupsOpen": true
            },
            {
              "id": "Vulnerability-AssessmentVulnerability-Assessment4-2-5-Ensure-that-Vulnerability-Assessment-Setting-Also-send-email-notifications-to-admins-and-subscription-owners-is-Set-for-Each-SQL-Server",
              "name": "4.2.5 Ensure that Vulnerability Assessment Setting 'Also send email notifications to admins and subscription owners' is Set for Each SQL Server",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "recurring scans email subscription admins": [
                  {
                    "exp": "true",
                    "check": "equals",
                    "expected": "true",
                    "background": "VA scan reports and alerts will be sent to admins and subscription owners by enabling setting 'Also send email notifications to admins and subscription owners'. This may help in reducing time required for identifying risks and taking corrective measures.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. Select a server instance\n3. Click on Security Center\n4. Select Configure next to Enabled at subscription-level\n5. In Section Vulnerability Assessment Settings, configure Storage Accounts if\nnot already\n6. Check/enable 'Also send email notifications to admins and subscription owners'\n7. Click Save"
                  }
                ]
              },
              "ci_path": [
                "Vulnerability Assessment",
                "Vulnerability Assessment",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "selectList": [
                "*"
              ],
              "description": "4.2.5 Ensure that Vulnerability Assessment Setting 'Also send email notifications to admins and subscription owners' is Set for Each SQL Server",
              "nodeGroupsOpen": true
            }
          ]
        }
      ]
    },
    {
      "Firewall Rules": [
        {
          "Firewall Rules": [
            {
              "id": "Firewall-RulesFirewall-Rules6-3-Ensure-no-SQL-Databases-allow-ingress-0-0-0-0-0",
              "name": "6.3 Ensure no SQL Databases allow ingress 0.0.0.0/0",
              "error": false,
              "checks": {
                "present": [
                  {
                    "check": "equals",
                    "expected": "true"
                  }
                ],
                "start IP address": [
                  {
                    "check": "regex_excludes",
                    "expected": "0.0.0.0",
                    "background": "SQL Server includes a firewall to block access to unauthorized connections. More granular IP addresses can be defined by referencing the range of addresses available from specific datacenters.\nBy default, for a SQL server, a Firewall exists with StartIp of 0.0.0.0 and EndIP of 0.0.0.0 allowing access to all the Azure services.\nAdditionally, a custom rule can be set up with StartIp of 0.0.0.0 and EndIP of 255.255.255.255 allowing access from ANY IP over the Internet.\nIn order to reduce the potential attack surface for a SQL server, firewall rules should be defined with more granular IP addresses by referencing the range of addresses available from specific datacenters.",
                    "remediation": "From Azure Console\n1. Go to SQL servers\n2. For each SQL server\n3. Click on Firewall and virtual networks\n4. Set Allow Azure services and resources to access this server to No\n5. Set firewall rules to limit access to only authorized connections"
                  }
                ]
              },
              "ci_path": [
                "Firewall Rules",
                "Firewall Rules",
                "*"
              ],
              "check_type": "other",
              "path_error": "",
              "description": "6.3 Ensure no SQL Databases allow ingress 0.0.0.0/0",
              "nodeGroupsOpen": true
            }
          ]
        }
      ]
    }
  ],
  "scan_options": {}
}
